# ??
# 1.???? ??
server.port = 80

# 2. JPA ?? ??
    # 1. DB URL
spring.datasource.driverClassName =com.mysql.cj.jdbc.Driver
# spring.datasource.driverClassName = DBMS ???? ??[? ???? ??]
spring.datasource.url =jdbc:mysql://localhost:3306/springweb
# spring.datasource.url = ??? ?????? ??
    # 2. DB USER
spring.datasource.username=root
# spring.datasource.username =???
    # 3. DB PASSWORD [ ????? ?? ?? ??. ]
spring.datasource.password=1234
# spring.datasource.username =DB?? ????

# [ ?? ?? ]
spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto = update

# JPA? SQL? ??? SQL?? CONSOLE ? ????
# 1. sql? console ????
spring.jpa.properties.hibernate.show_sql=true
# 2. sql ??? ?? ?? ??
spring.jpa.properties.hibernate.format_sql=true

# spring view conroller ----> react build file[js]
spring.mvc.pathmatch.matching-strategy = ant_path_matcher

# ======================================= KAKAO OAUTH2 CONNECT ================================================
# 1. 인가 코드 받기
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
# 2. 인가 토큰 받기
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
# 3. 사용자 정보 가져오기 uri
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost/login/oauth2/code/kakao

#spring.security.oauth2.client.registration.kakao.client-id=rest키
spring.security.oauth2.client.registration.kakao.client-id=932d350b3687a6ddf9c596d3db47815b

# spring.security.oauth2.client.registration.kakao.client-secret=설정된키
spring.security.oauth2.client.registration.kakao.client-secret=kJ9jG2UOlPGUF78EejmzWQ0n6KP4ztCB

spring.security.oauth2.client.registration.kakao.client-authentication-method=POST
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email

# ======================================= =========================  ================================================
# ======================================= NAVER OAUTH2 CONNECT ================================================
# 1. 인가 코드 받기
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# 2. 인가 토큰 받기
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 3. 사용자 정보 가져오기 uri
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me

spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect_uri=http://localhost:80/login/oauth2/code/naver

#spring.security.oauth2.client.registration.naver.client-id= Client ID 키
spring.security.oauth2.client.registration.naver.client-id=hrNtQhbhIc91KpHXEcNq

# spring.security.oauth2.client.registration.naver.client-secret= Client Secret 키
spring.security.oauth2.client.registration.naver.client-secret=nxyfLGvzlV

spring.security.oauth2.client.registration.naver.client-authentication-method=POST
spring.security.oauth2.client.registration.naver.scope=nickname,email

# ======================================= =========================  ================================================

# ======================================= GOOGLE OAUTH2 CONNECT ================================================
spring.security.oauth2.client.registration.google.client-id=45322731373-si83uhc4jjo9c5fh46v7ec4gneoovqk0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
# ======================================= =========================  ================================================